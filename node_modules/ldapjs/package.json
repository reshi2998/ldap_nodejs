{
  "_from": "ldapjs",
  "_id": "ldapjs@2.0.0",
  "_inBundle": false,
  "_integrity": "sha512-ZESQmVoG4a2ZX51pl/aRI+/kqiN2eRWMgHIsNZ2TYf37/S64OPnVJL5Vd5gdZR/qRPZVe5uuKW5p0GK2FUx/FQ==",
  "_location": "/ldapjs",
  "_phantomChildren": {},
  "_requested": {
    "type": "tag",
    "registry": true,
    "raw": "ldapjs",
    "name": "ldapjs",
    "escapedName": "ldapjs",
    "rawSpec": "",
    "saveSpec": null,
    "fetchSpec": "latest"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/ldapjs/-/ldapjs-2.0.0.tgz",
  "_shasum": "af935604fff40b864e2173cf27d9f47e33cb9bf2",
  "_spec": "ldapjs",
  "_where": "C:\\Users\\Josue\\Desktop\\ldap_nodejs",
  "bugs": {
    "url": "https://github.com/ldapjs/node-ldapjs/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "abstract-logging": "^1.0.0",
    "asn1": "^0.2.4",
    "assert-plus": "^1.0.0",
    "backoff": "^2.5.0",
    "ldap-filter": "^0.3.3",
    "once": "^1.4.0",
    "vasync": "^2.2.0",
    "verror": "^1.8.1"
  },
  "deprecated": false,
  "description": "LDAP client and server APIs",
  "devDependencies": {
    "get-port": "^5.1.1",
    "husky": "^3.0.4",
    "snazzy": "^8.0.0",
    "standard": "^14.0.2",
    "tap": "14.10.1",
    "uuid": "^3.3.3"
  },
  "directories": {
    "lib": "./lib"
  },
  "engines": {
    "node": ">=10.13.0"
  },
  "homepage": "http://ldapjs.org",
  "husky": {
    "hooks": {
      "pre-commit": "npm run lint && npm run test"
    }
  },
  "license": "MIT",
  "main": "lib/index.js",
  "name": "ldapjs",
  "originalAuthor": "Mark Cavage <mcavage@gmail.com>",
  "repository": {
    "type": "git",
    "url": "git://github.com/ldapjs/node-ldapjs.git"
  },
  "scripts": {
    "lint": "standard | snazzy",
    "lint:ci": "standard",
    "test": "tap --no-cov",
    "test:ci": "tap --coverage-report=lcovonly",
    "test:cov": "tap",
    "test:cov:html": "tap --coverage-report=html",
    "test:integration": "tap --no-cov 'test-integration/**/*.test.js'",
    "test:integration:local": "docker-compose up -d && npm run test:integration && docker-compose down",
    "test:watch": "tap -n -w --no-coverage-report"
  },
  "version": "2.0.0"
}
